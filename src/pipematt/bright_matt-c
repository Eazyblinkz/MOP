#! AA-PERLDIR

# This is Holman's version of the program that extracts a list of
# bright stars from the images.
#
# It starts with the transformed position files (*.tf) produced
# in bright_matt.  The *.tf files are subsequently deleted.
#

use Getopt::Long;
GetOptions('f1|file1:s','f2|file2:s','f3|file3:s','h|help');

# -f1 image_file1 (w/o .fits extension) -f2 image_file2  -f3 image_file3 -h/? help line

$im1 = $opt_f1;
$im2 = $opt_f2;
$im3 = $opt_f3;

if($opt_h == 1){
    print "usage: bright_matt -f1 im_name1 -f2 im_name2 -f3 im_name3.\n";
    die;
}elsif($opt_f1 eq ""){
    print "No image file1 specified. All arguments must be specified.\n"."usage: bright_matt -f1 im_name1 -f2 im_name2 -f3 im_name3.\n";
    die;
}elsif($opt_f2 eq ""){
    print "No fwhm specified. All arguments must be specified.\n"."usage: bright_matt -f1 im_name1 -f2 im_name2 -f3 im_name3.\n";
    die;
}elsif($opt_f3 eq ""){
    print "No detection threshold specified. All arguments must be specified.\n"."usage: bright_matt -f1 im_name1 -f2 im_name2 -f3 im_name3.\n";
    die;
}elsif($opt_h != 0){
    print "usage: bright_matt -f1 im_name1 -f2 im_name2 -f3 im_name3.\n";
    die;
}

$bright_prog="bright";

$objfile1 = "$im1".".obj.matt";
$objfile2 = "$im2".".obj.matt";
$objfile3 = "$im3".".obj.matt";

$objfile1t = "$im1".".tf";
$objfile1ts = "$im1".".tfs";
$objfile2t = "$im2".".tf";
$objfile3t = "$im3".".tf";

$brightfile1 = "$im1".".bright.matt";
$brightfile2 = "$im2".".bright.matt";
$brightfile3 = "$im3".".bright.matt";

$nbright = 200;

open(INFILE,"< $objfile1");
# Put the header lines in the bright star file #1.
open(OUTFILE,"> $brightfile1");
$line = <INFILE>;
print OUTFILE $line;
$line = <INFILE>;
print OUTFILE $line;
close(OUTFILE);

open(INFILE,"< $objfile2");
# Put the header lines in the bright star file #2.
open(OUTFILE,"> $brightfile2");
$line = <INFILE>;
print OUTFILE $line;
$line = <INFILE>;
print OUTFILE $line;
close(OUTFILE);

open(INFILE,"< $objfile3");
# Put the header lines in the bright star file #3.
open(OUTFILE,"> $brightfile3");
$line = <INFILE>;
print OUTFILE $line;
$line = <INFILE>;
print OUTFILE $line;
close(OUTFILE);

`sort -k 5 -n -r $objfile1t > $objfile1ts`; 

$thresh = 1.0;
$flux_ratio_max = 3.0;
$elong_max = 1.5;

`$bright_prog $thresh $flux_ratio_max $elong_max $nbright $objfile1ts $brightfile1 $objfile2t $brightfile2 $objfile3t $brightfile3`;

# `rm $objfile1t $objfile2t $objfile3t $objfile1ts`;
