

## read in the .cands.comb file
def read_cands(filename):
    """Read in the contents of a cands comb file"""
    import sre
    
    lines=file(filename).readlines()
    exps=[]
    cands=[]
    coo=[]
    for line in lines:
        if ( line[0:2]=="##" ) :
            break
        exps.append(line[2:].strip())

    for line in lines:
        if ( line[0]=="#" ) :
            continue
        if len(line.strip())==0:
            if len(coo)!=0:
                cands.append(coo)
            coo=[]
            continue
        vals=line.split()
        cols=['x','y','x_0','y_0','flux','size','max_int','elon']
        values={}
        for j in range(len(cols)):
            col=cols.pop().strip()
            val=vals.pop().strip()
            values[col]=float(val)
        coo.append(values)
    cands.append(coo)
    return {'fileId': exps, 'cands': cands}

if __name__ == '__main__':
    import sys
    import pyraf, pyfits

    pyraf.iraf.tv()
    display = pyraf.iraf.tv.display
    
    width=128
    
    record= read_cands(sys.argv[1])
    cands = record['cands']
    exps=   record['fileId']

    ### load some header info from the mophead file
    headers={}
    for exp in exps:
        f = pyfits.open(exp+".fits")
        headers[exp]={}
        for key in ['MJDATE', 'NAXIS1', 'NAXIS2', 'EXPTIME', 'FILTER']:
            headers[exp][key]=f[0].header[key]
        headers[exp]['MJD-OBSC']=headers[exp]['MJDATE']+headers[exp]['EXPTIME']/2.0/3600.0/24.0
        f.close()

    import math
    for cand in cands:
        for i in range(len(exps)):
            fileId=exps[i]
            x2 = int(max(math.floor(cand[i]['x'])+width,headers[fileId]['NAXIS1']))
            y2 = int(max(math.floor(cand[i]['y'])+width,headers[fileId]['NAXIS2']))
            x1 = int(min(math.floor(cand[i]['x'])-width,0))
            y1 = int(min(math.floor(cand[i]['y'])-width,0))
            cutout = "[%d:%d,%d:%d]" % ( x1,x2,y1,y2)
            print fileId+cutout
            display(fileId+cutout,i+1)
