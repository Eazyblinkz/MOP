#!/usr/cadc/misc/bin/python
"""Script to take an .obj file [MOP object file] and ingest into the MOP object database"""

from myTaskError import TaskError


def objIngest(obj_file):
    import sys,os,math,re
    
    import pyfits
    
    import MOPfiles

    obj=MOPfiles.read(obj_file)
    ### should be a header keyword called 'image' that has the image name...
    if not obj['header'].has_key('image'):
        g=re.match('(?P<base>[^.]*)\.?(?P<ext>.*)',obj_file)
        if not g or not g.group('base'):
            raise TaskError, 'objIngest: bad file name?'
        obj['header']['image']=g.group('base')

    ### image may or may not have the .fits extension
    fits_file=obj['header']['image']
    if not os.access(fits_file,os.R_OK):
        fits_file=fits_file+'.fits'

    ### just fail if we cann't get the image, needed for the wcs information
    obj['hdu2sql']={'MAX_INT': 'peak',
                    'FLUX': 'flux',
		    'MAG': 'mag',
		    'MERR': 'merr',
                    'SKY': 'sky',
                    'ELON': 'elongation',
                    'X^2': 'chi2',
                    'N_PIX': 'npix',
                    'SHARP': 'sharpness',
                    'Y': 'yPix',
                    'X': 'xPix',
                    'SIZE': 'size',
                    'RA': 'raDeg',
                    'DEC': 'decDeg',
                    }


    obj['data']['RA']=[]
    obj['data']['DEC']=[]
    for i in range(len(obj['data']['X'])):
        pos=wcs.xy2rd([float(obj['data']['X'][i]),float(obj['data']['Y'][i])])
        obj['data']['RA'].append(pos[0])
        obj['data']['DEC'].append(pos[1])


    MOPfiles.store(obj)

    return


if __name__ == '__main__':
    
    from optparse import OptionParser
    
    parser=OptionParser()
    parser.add_option("--verbose","-v",action="store_true",help="Tell you what I'm doing.")
    (opt,obj_files)=parser.parse_args()

    for obj_file in obj_files:
        if opt.verbose:
            sys.stdout.write("Ingesting %s\n" % ( obj_file))
        objIngest(obj_file)
        
    

